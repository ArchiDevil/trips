services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: on-failure
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 2s
      start_interval: 2s

  app:
    build:
      context: .
      dockerfile: app.Dockerfile
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      SERVER_NAME: ${SERVER_NAME}
      VK_APP_SECRET: ${VK_APP_SECRET}
      VK_CLIENT_ID: ${VK_CLIENT_ID}
      BREVO_API_KEY: ${BREVO_API_KEY}
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  proxy:
    build:
      context: .
      dockerfile: proxy.Dockerfile
    ports:
      - "6161:6161"
    depends_on:
      app:
        condition: service_started
    restart: on-failure

volumes:
  postgres_data:
    driver: local
